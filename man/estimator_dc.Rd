% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/main function.R
\name{estimator_dc}
\alias{estimator_dc}
\title{Estimator Function with Optional Cross-Fitting}
\usage{
estimator_dc(formula, data, index, CF = FALSE, init = 30)
}
\arguments{
\item{formula}{regression formula}

\item{data}{data which contains id, time, Y, X}

\item{index}{name of 'id' and 'time' in the data}

\item{CF}{cross-fitting if true}

\item{init}{initial iteration number of k-means}
}
\value{
estimated results, cluster number of unit and time group
}
\description{
Estimator Function with Optional Cross-Fitting
}
\examples{
set.seed(1)
# Generate data
N <- 50
T <- 50
E <- matrix( rnorm(N*T), N, T)
U <- matrix( rnorm(N*T), N, T)
E[, 1] <- rnorm(N)
U[, 1] <- rnorm(N)


A <- rgamma(N, 1)
B <- rgamma(N, 1)

A_rep <- matrix(rep(A, T), N, T)
B_rep <- t(matrix(rep(B, N), T, N))


F <- (0.5 * A_rep^10 + 0.5 * B_rep^10)^(1 / 10)
H <- (0.5 * A_rep^10 + 0.5 * B_rep^10)^(1 / 5)


X <- H + U
Y <- X + F + E

id_code <- numeric(N * T)
for (i in 1:N) {
  for (t in 1:T) {
    id_code[((t - 1) * N + i):(t * N)] <- 10+i
  }
}

time_code <- numeric(N * T)
for (i in 1:N) {
  for (t in 1:T) {
    time_code[((t - 1) * N + 1):(t * N)] <- 10 + t
  }
}

vY <- c(Y)
vX <- c(X)

data <- data.frame(id_code, time_code, vY, vX)

formula <- vY ~ vX - 1
index = c("id_code", "time_code")
init <- 300
# Baseline estimate
est <- estimator_dc(formula, data, index, init = init)
ols <- est[["res"]]
G <- est[["G"]]
C <- est[["C"]]
# 'summary_correct' contains the original estimates and standard error corrected by the heteroskedasticity autocorrelation consistent standard error
summary_correct = est$summary_table
coef_estimate = summary_correct$coefficients$Estimate
std_error_original = summary_correct$coefficients$`Std. Error`
std_error_corrected = summary_correct$coefficients$`Std. Error corrected`

# Cross-fitted estimate
est_CF <- estimator_dc(formula, data, index, CF = TRUE, init = init)
ols_CF <- est_CF[["res"]]
summary_correct_CF = est_CF$summary_table
coef_estimate_CF = summary_correct_CF$coefficients$Estimate
std_error_original_CF = summary_correct_CF$coefficients$`Std. Error`
std_error_corrected_CF = summary_correct_CF$coefficients$`Std. Error corrected`
}
